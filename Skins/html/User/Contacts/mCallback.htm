<?php if(!$ajaxForm) { ?>

    <script>
        function getRandomNumber(min, max) {
            min = Math.ceil(min)
            max = Math.floor(max)
            return Math.floor(Math.random() * (max - min) + min)
        }

        function displayOpa() {
            while ( true )
            {
                var number1 = getRandomNumber(1,10)
                var number2 = getRandomNumber(1,10)

                var variable = prompt("Решите пример: " + number1 + "+" + number2 + '=');
                if ( Number(variable) === number1+number2 ) break;
                alert( "Не правильно" );
            }

            while ( true )
            {
                number1 = getRandomNumber(1,10)
                number2 = getRandomNumber(1,10)

                variable = prompt("Еще один пример: " + number1 + "+" + number2 + '=');
                if ( Number(variable) === number1+number2 ) break;
                alert( "Не правильно" );
            }
        }

        //window.onload = displayOpa;
    </script>

	<div id="title" class="title">
		<div class="centering">
			<div class="centeringin clearfix">
				<?php if(count($breadcrumbs)) { ?>
					<?php $bcLast = array_pop($breadcrumbs); ?>
					<ul class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
						<?php $position = 0; ?>
						<?php foreach($breadcrumbs as $bc) { ?>
						<?php $position = $position + 1 ?>
						<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
							<a href="<?php echo $bc['url']; ?>" title="<?php echo hsch($bc['name'])?>" itemscope itemtype="http://schema.org/Thing"
								itemid="<?php echo $bc['url']; ?>" itemprop="item"><span itemprop="name"><?php echo $bc['name']; ?></span></a>
							<meta itemprop="position" content="<?php echo $position?>" />
						</li>
						<li><span> / </span></li>
						<?php } ?>
						<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
							<span itemscope itemtype="http://schema.org/Thing" itemid="<?php echo $bc['url']; ?>" itemprop="item">
								<span itemprop="name"><?php echo $bcLast['name']; ?></span>
							</span>
							<meta itemprop="position" content="<?php echo $position + 1?>" />
						</li>
					</ul>
				<?php } ?>

				<?php if(trim($pageInf['header'])) { ?>
					<h1 class="pagetitle"><?php echo $pageInf['header']; ?></h1>
				<?php } ?>
			</div>
		</div>
	</div>
	<div id="content" class="content">
		<div class="centering">
			<div class="centeringin clearfix">
<?php } ?>

<div>
	<div id="form-errors" class="errortext"></div>
	<div class="someform clearfix">
		<form id="callback-form">
			<?php if($ajaxForm) { ?>
				<input type="hidden" name="XMLHttpRequest" value="1">

			<script type="text/javascript">
				function _processform_callback(){
					var obForm = top.BX('callback-form');
					top.BX.bind(
						obForm,
						'submit',
						function(){
							BX.ajax.submitComponentForm(this, 'callback-form', true);
						}
					);
					top.BX.removeCustomEvent('onAjaxSuccess', _processform_callback);
				}
				if(top.BX('callback-form')){
					_processform_callback();
				}else{
					top.BX.addCustomEvent('onAjaxSuccess', _processform_callback);
				}
			</script>

			<script>
				grecaptcha.render('captcha_callback-form', {'sitekey' : '6Ld8RvMUAAAAAJKbvGCPrbr__Jq19dN3u5wFeOaL' });
			</script>
			<?php } ?>
			<div class="line clearfix">
				<input type="text" name="name" value="" placeholder="Ваше имя*:"
					   maxlength="100"
					   msg_maxlen="Имя не должно превышать 100 символов"
					   required
					   msg_required="Вы не ввели ваше имя"
					>
			</div>
            <div style="display:none">
                <input type="text" name="last_name" id="last_name" autocomplete="off" maxlength="100">
            </div>
			<div class="line clearfix">
				<input class="maskPhone" type="text" name="phone" value="" placeholder="Номер телефона*:"
					   maxlength="20"
					   msg_maxlen="Номер телефона не должен превышать 20 символов"
					   required
					   msg_required="Вы не ввели номер телефона"
					>
			</div>
			<div class="line clearfix">
				<div class="captcha-item" id="captcha_callback-form"></div>
			</div>

            <div class="line buttons clearfix">
                <input type="hidden" name="csrf_token" value="<?php echo $pageInf['csrf_token']; ?>">
                <input type="hidden" name="enigma<?php echo time(); ?>" value="<?php echo bin2hex(random_bytes(8)) ?>">
                <input class="btn btn1" type="submit" name="submit" value="Отправить">
            </div>
		</form>
	</div>
</div>

<?php if(!$ajaxForm) { ?>
			</div>
		</div>
	</div>
<?php } ?>








<style>

.cookie_notice {
	display: none;
	position: fixed;
	z-index: 9999999;
	bottom: 0;
	left: 0;
	right: 0;
	text-align: center;
	font-size: 15px;
	font-family: Verdana, sans-serif;
	color: #FFF;
	background: #337AB7;
	padding: 10px 20px;
	border-top: 4px solid #BFE2FF;
}
/* Оформление кнопок */
.cookie_btn {
	display: inline-block;
	margin: 10px 6px 4px 6px;
	text-decoration: none;
	position: relative;
	font-size: 13px;
	padding: 4px 12px;
	color: #FFF;
	font-weight: bold;
	text-transform: uppercase;
	background: #337AB7;
	border: 2px solid #BFE2FF;
}
.cookie_btn:hover {
	color: #FFF;
}
.cookie_btn:after,
.cookie_btn:before {
	position: absolute;
	height: 2px;
	left: 50%;
	background: #FFF;
	bottom: -6px;
	content: "";
	transition: all 280ms ease-in-out;
	width: 0;
}
.cookie_btn:before {
	top: -6px;
}
.cookie_btn:hover:after,
.cookie_btn:hover:before {
	width: 100%;
	left: 0;
}
</style>

<div class="cookie_notice">
    Этот сайт использует файлы cookies и сервисы сбора технических данных посетителей (данные об IP-адресе, местоположении и др.) для обеспечения работоспособности и улучшения качества обслуживания. Продолжая использовать наш сайт, вы автоматически соглашаетесь с использованием данных технологий.
    <div>
        <a class="cookie_btn" id="cookie_close" href="#close">Ок</a>

    </div>
</div>



<script>
// функция возвращает cookie с именем name, если есть, если нет, то undefined
function getCookie(name) {
	let matches = document.cookie.match(new RegExp(
    "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
	));
	return matches ? decodeURIComponent(matches[1]) : undefined;
}
let cookiecook = getCookie("cookiecook"),
cookiewin = document.getElementsByClassName('cookie_notice')[0];
// проверяем, есть ли у нас cookie, с которой мы не показываем окно и если нет, запускаем показ
if (cookiecook != "no") {
	// показываем
	cookiewin.style.display="block";
	// закрываем по клику
	document.getElementById("cookie_close").addEventListener("click", function(){
		cookiewin.style.display="none";
		// записываем cookie на 1 день, с которой мы не показываем окно
		let date = new Date;
		date.setDate(date.getDate() + 1);
		document.cookie = "cookiecook=no; path=/; expires=" + date.toUTCString();
	});
}
</script>
